(()=>{"use strict";(new class{codeAreaWrapper=document.getElementById("codeArea");codeLineNumbersArea=document.getElementById("codeLineNumbers");codeArea=document.getElementById("code");regsArea=document.getElementById("regs");memArea=document.getElementById("mem");constructor(){}setupCode(){this.codeAreaWrapper.onclick=t=>{this.codeArea.focus()},this.codeArea.addEventListener("input",(t=>{const e=t.target.value.split("\n").length;this.codeLineNumbersArea.innerHTML=Array(e).fill("<span></span>").join("")}),!1)}setupRegisters(t){this.updateRegisters(t)}setupMemory(t){this.updateMemory(t)}setup(t,e){this.setupCode(),this.setupRegisters(t),this.setupMemory(e)}updateCode(){}updateRegisters(t){let e='<tr class="register">\n\t\t\t\t\t\t<th class="registerName">Register</th>\n\t\t\t\t\t\t<th class="registerValue">Value</th>\n\t\t\t\t\t\t<th class="registerName">Register</th>\n\t\t\t\t\t\t<th class="registerValue">Value</th>\n\t\t\t\t\t\t</tr>';for(let s=0;s<t.length;s+=2)e+=`<tr class="register">\n\t\t\t\t\t\t\t<td class="registerName">${t[s][0]} [${s}]</td>\n\t\t\t\t\t\t\t<td class="registerValue">${t[s][1]}</td>\n\t\t\t\t\t\t\t<td class="registerName">${t[s+1][0]} [${s+1}]</td>\n\t\t\t\t\t\t\t<td class="registerValue">${t[s+1][1]}</td>\n\t\t\t\t\t\t\t</tr>`;this.regsArea.innerHTML=`<tbody>${e}</tbody>`}updateMemory(t){let e='<tr>\n\t\t\t\t\t\t\t<td class="memoryAddress">Address</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+3</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+2</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+1</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+0</td>\n\t\t\t\t\t\t</tr>';for(let t=0;t<6;t++)e+=`<tr>\n\t\t\t\t\t\t\t<td class="memoryAddress">${4*t+8e3}</td>\n\t\t\t\t\t\t\t<td class="memoryValue">0</td>\n\t\t\t\t\t\t\t<td class="memoryValue">0</td>\n\t\t\t\t\t\t\t<td class="memoryValue">0</td>\n\t\t\t\t\t\t\t<td class="memoryValue">0</td>\n\t\t\t\t\t\t</tr>`;this.memArea.innerHTML=`<tbody>${e}</tbody>`}update(t,e){this.updateCode(),this.updateRegisters(t),this.updateMemory(e)}}).setup([["zero",0],["ra",0],["sp",0],["gp",0],["tp",0],["t0",21],["t1",22],["t2",23],["s0",0],["s1",0],["a0",0],["a1",0],["a2",0],["a3",0],["a4",0],["a5",0],["a6",0],["a7",0],["s2",0],["s3",0],["s4",0],["s5",0],["s6",0],["s7",0],["s8",0],["s9",0],["s10",0],["s11",0],["t3",0],["t4",0],["t5",0],["t6",0]],void 0),console.log([21,"0x"+21..toString(16).toUpperCase(),"0b"+21..toString(2)]);let t=new class{mem={};memorySize;constructor(t){this.memorySize=t}read1(t){return this.mem[t]||0}write1(t,e){if(t<0||t>=this.memorySize)throw new Error("Address out of bounds");let s=e.toString(2);s=s.padStart(8,"0"),this.mem[t]=s}read2(t){let e=this.read1(t);return this.read1(t+1)<<8|e}write2(t,e){if(t<0||t>=this.memorySize)throw new Error("Address out of bounds");let s=e>>8,r=(255&e).toString(2).padStart(8,"0"),a=s.toString(2).padStart(8,"0");this.write1(t,r),this.write1(t+1,a)}read4(t){let e=this.read2(t);return this.read2(t+1)<<16|e}write4(t,e){if(t<0||t>=this.memorySize)throw new Error("Address out of bounds");let s=e>>16,r=(65535&e).toString(2).padStart(16,"0"),a=s.toString(2).padStart(16,"0");this.write2(t,r),this.write2(t+1,a)}}(10);t.write1(0,5),console.log(t.read1(0)),t.write2(1,259),console.log(t.read1(1)),console.log(t.read1(2)),t.write4(3,16843009),console.log(t.read1(3)),console.log(t.read1(4)),console.log(t.read1(5)),console.log(t.read1(6))})();