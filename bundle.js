(()=>{"use strict";class t{mem={};memorySize=4294967296;constructor(t){void 0!==t&&(this.memorySize=t)}read1(t){return this.mem[t]||0}write1(t,e){if(t<0||t>=this.memorySize)throw new Error("Address out of bounds");e&=255,this.mem[t]=e}read2(t){let e=this.read1(t);return this.read1(t+1)<<8|e}write2(t,e){if(t<0||t>=this.memorySize)throw new Error("Address out of bounds");let s=255&(e&=65535),i=e>>8;this.write1(t,s),this.write1(t+1,i)}read4(t){let e=this.read2(t);return this.read2(t+1)<<16|e}write4(t,e){if(t<0||t>=this.memorySize)throw new Error("Address out of bounds");let s=65535&(e&=4294967295),i=e>>16;this.write2(t,s),this.write2(t+1,i)}init(){this.mem={}}}const e=new class{regs=[["zero",0],["ra",0],["sp",0],["gp",0],["tp",0],["t0",0],["t1",0],["t2",0],["s0",0],["s1",0],["a0",0],["a1",0],["a2",0],["a3",0],["a4",0],["a5",0],["a6",0],["a7",0],["s2",0],["s3",0],["s4",0],["s5",0],["s6",0],["s7",0],["s8",0],["s9",0],["s10",0],["s11",0],["t3",0],["t4",0],["t5",0],["t6",0]];regNames="zero ra sp gp tp t0 t1 t2 s0 s1 a0 a1 a2 a3 a4 a5 a6 a7 s2 s3 s4 s5 s6 s7 s8 s9 s10 s11 t3 t4 t5 t6".split(" ");getIndex(t){if("string"==typeof t){t=t.toLowerCase();let e=this.regNames.indexOf(t);if(-1!==e)return e;if(t.length<=3&&"x"===t[0]){if(t=t.slice(1),isNaN(t))throw new Error("Invalid register name");if(e=parseInt(t),e<0||e>=this.regs.length)throw new Error("Invalid register index");return e}throw new Error("Invalid register name")}if("number"==typeof t){if(t<0||t>=this.regs.length)throw new Error("Invalid register index");return t}throw new Error("Invalid register name")}read(t){let e=this.getIndex(t);return this.regs[e][1]}write(t,e){let s=this.getIndex(t);0!=s&&(e&=4294967295,this.regs[s][1]=e)}init(){for(let t=0;t<this.regs.length;t++)this.write(t,0)}},s=new t;class i{code="";labels={};intsructions=[];constructor(t){void 0!==t&&this.takeCode(t)}takeCode(t){this.code=t}validate_data(t){if("string"!=typeof t)return!1;const e=t.trim().split("\n"),s=/^\s*\d+:\s*\d+\s*$/;for(const t of e)return t.match(s)?(console.log("Line is valid"),!0):(console.log("Line is not valid"),!1)}validate_code(t){if("string"!=typeof t)return console.log("Code is not a string"),!1;const e=t.trim().split("\n"),s=[/^\s*([a-zA-Z]\w*)\s+([a-zA-Z]\w*),\s*([a-zA-Z]\w*),\s*([a-zA-Z]\w*)\s*$/,/^\s*([a-zA-Z]\w*)\s+([a-zA-Z]\w*),\s*([a-zA-Z]\w*),\s*(\d+)\s*$/,/^\s*([a-zA-Z]\w*)\s+([a-zA-Z]\w*),\s*(\d+)\s*$/,/^\s*([a-zA-Z]\w*)\s+([a-zA-Z]\w*),\s*(\d+)\s*$/,/^\s*([a-zA-Z]\w*)\s+([a-zA-Z]\w*),\s*([a-zA-Z]\w*),\s*(\d+)\s*$/,/^\s*([a-zA-Z]\w*)\s+([a-zA-Z]\w*),\s*(\d+)\s*$/];for(const t of e){let e=!1;for(const i of s)if(t.match(i)){e=!0;break}if(!e)return console.log("Line is not valid"),!1}return console.log("All lines are valid"),!0}seperate_code(){let t=this.code.split("\n");t=t.filter((function(t){return""!==t}));for(let e=0;e<t.length;e++){if(t[e].includes(":")){let s=t[e].split(":");s[0]=s[0].replaceAll(" ",""),""==s[1]?t.splice(e,1):(s[1]=s[1].trim(),t[e]=s[1]),this.labels[s[0]]=e}let s=t[e].indexOf(" "),i=t[e].slice(0,s).toLowerCase(),a=t[e].slice(s);a=a.replaceAll(" ","");let n=a.split(",");this.intsructions.push([i,...n])}}}let a=new t(10);a.write1(0,5),console.log(a.read1(0)),a.write2(1,259),console.log(a.read1(2)),console.log(a.read1(1)),a.write4(3,16843009),console.log(a.read1(3)),console.log(a.read1(4)),console.log(a.read1(5)),console.log(a.read1(6)),a.write1(0,259),console.log(a.read1(0));let n=new i("L1: add x1,x2,x3\nsubi  t0,  x3 , 5\nL2:\njal ra, L1\nbeq t0, t1,  L2\nJALR zero, 0(x1)");n.seperate_code(),console.log(n.labels),console.log(n.intsructions);const o=new class{ui=void 0;isPlaying=!1;constructor(){}setUI(t){this.ui=t}setupUI(t){void 0!==t&&this.setUI(t),this.ui.onPlay=()=>{this.startExecution()},this.ui.onStop=()=>{this.stopExecution()},this.ui.onNext=()=>{this.executeNext()},this.ui.onFallThrough=()=>{this.executeAll()}}startExecution(){this.isPlaying||(this.isPlaying=!0,this.ui.setCurrentTab("execution"),this.ui.codeContent,this.ui.dataContent,this.ui.instructionAddress)}executeNext(){this.isPlaying&&(this.executeCommand(),this.ui.update())}executeAll(){this.isPlaying&&this.ui.update()}stopExecution(){this.isPlaying&&(this.isPlaying=!1,this.ui.setCurrentTab("code"))}executeCommand(){}};function r(t,e=32){const s="0x"+t.toString(16).toUpperCase().padStart(e/4,"0"),i="0b"+t.toString(2).padStart(e,"0");return[t,s,i]}const d=new class{codeAreaWrapper=document.getElementById("codeArea");codeLineNumbersArea=document.getElementById("codeLineNumbers");codeArea=document.getElementById("code");regsArea=document.getElementById("regs");memArea=document.getElementById("mem");code_actions_btns={open_file_input:document.getElementById("open-file-choose-input"),play_btn:document.getElementById("play-btn"),stop_btn:document.getElementById("stop-btn"),next_btn:document.getElementById("next-btn"),fall_through_btn:document.getElementById("fall-through-btn")};format_btns={dec_format_btn:document.getElementById("format-btn-dec"),hex_format_btn:document.getElementById("format-btn-hex"),bin_format_btn:document.getElementById("format-btn-bin")};code_tabs={code_tab:document.getElementById("code-tab"),data_tab:document.getElementById("data-tab"),execution_tab:document.getElementById("execution-tab")};details_inputs={pc:document.getElementById("pc-input"),instruction_address:document.getElementById("instruction-address-input"),first_memory_address:document.getElementById("first-memory-address-input")};regs=void 0;mem=void 0;flow=void 0;onPlay=()=>{};onStop=()=>{};onNext=()=>{};onFallThrough=()=>{};instructionAddress=0;firstAddress=8e3;visibleFormat="decimal";currentTab="code";codeContent="";dataContnet="";constructor(){}setRegs(t){this.regs=t}setMem(t){this.mem=t}setFlow(t){this.flow=t}setupCode(){this.codeAreaWrapper.onclick=t=>{this.codeArea.focus()},this.codeArea.addEventListener("input",(t=>{let e=t.target.value;const s=e.split("\n").length;this.codeLineNumbersArea.innerHTML=Array(s).fill("<span></span>").join(""),"code"===this.currentTab?this.codeContent=e:"data"===this.currentTab&&(this.dataContnet=e)}),!1),this.code_actions_btns.open_file_input.onchange=t=>{let e=this.code_actions_btns.open_file_input.files[0],s=new FileReader;s.readAsText(e,"UTF-8"),s.onload=t=>{let e=t.target.result;this.codeArea.value=e,this.update()}},this.code_actions_btns.play_btn.onclick=t=>{this.onPlay()},this.code_actions_btns.stop_btn.onclick=t=>{this.onStop()},this.code_actions_btns.next_btn.onclick=t=>{this.onNext()},this.code_actions_btns.fall_through_btn.onclick=t=>{this.onFallThrough()},this.format_btns.dec_format_btn.onclick=t=>{this.removeAllFormatButtonSelections(),this.format_btns.dec_format_btn.classList.add("selected"),this.setFormat("decimal")},this.format_btns.hex_format_btn.onclick=t=>{this.removeAllFormatButtonSelections(),this.format_btns.hex_format_btn.classList.add("selected"),this.setFormat("hexadecimal")},this.format_btns.bin_format_btn.onclick=t=>{this.removeAllFormatButtonSelections(),this.format_btns.bin_format_btn.classList.add("selected"),this.setFormat("binary")},this.code_tabs.code_tab.onclick=t=>{this.flow.isPlaying||this.setCurrentTab("code")},this.code_tabs.data_tab.onclick=t=>{this.flow.isPlaying||this.setCurrentTab("data")},this.code_tabs.execution_tab.onclick=t=>{this.flow.isPlaying&&this.setCurrentTab("execution")},this.updateCode()}setupRegisters(){this.updateRegisters()}setupMemory(){this.updateMemory()}setupDetails(){this.details_inputs.first_memory_address.value=this.firstAddress.toString(),this.details_inputs.first_memory_address.oninput=t=>{let e=this.details_inputs.first_memory_address.value;this.firstAddress=parseInt(e),this.update()},this.details_inputs.instruction_address.value=this.instructionAddress.toString(),this.details_inputs.instruction_address.oninput=t=>{let e=this.details_inputs.instruction_address.value;this.instructionAddress=parseInt(e),this.update()},this.updateDetails()}setup(t,e,s){void 0!==t&&this.setRegs(t),void 0!==e&&this.setMem(e),void 0!==s&&this.setFlow(s),this.setupCode(),this.setupRegisters(),this.setupMemory(),this.setupDetails()}updateCode(){this.flow.isPlaying?(this.code_actions_btns.play_btn.style.display="none",this.code_actions_btns.stop_btn.style.display="flex"):(this.code_actions_btns.play_btn.style.display="flex",this.code_actions_btns.stop_btn.style.display="none"),this.codeArea.dispatchEvent(new Event("input"))}updateCodeTab(){this.removeAllTabButtonSelections(),"code"===this.currentTab?(this.code_tabs.code_tab.classList.add("selected"),this.codeArea.value=this.codeContent,this.codeArea.placeholder=""):"data"===this.currentTab?(this.code_tabs.data_tab.classList.add("selected"),this.codeArea.value=this.dataContnet,this.codeArea.placeholder="Address(Decimal) : Data(1 Byte, Decimal)\n8000 : 5"):"execution"===this.currentTab&&(this.code_tabs.execution_tab.classList.add("selected"),this.codeArea.value="",this.codeArea.placeholder=""),this.update()}updateRegisters(){let t=this.regs.regs,e=["decimal","hexadecimal","binary"].indexOf(this.visibleFormat);-1==e&&(e=0);let s='<tr class="register">\n\t\t\t\t\t\t<th class="registerName">Register</th>\n\t\t\t\t\t\t<th class="registerValue">Value</th>\n\t\t\t\t\t\t<th class="registerName">Register</th>\n\t\t\t\t\t\t<th class="registerValue">Value</th>\n\t\t\t\t\t\t</tr>';for(let i=0;i<t.length;i+=2){let a=[r(t[i][1],32),r(t[i+1][1],32)];s+=`<tr class="register">\n\t\t\t\t\t\t\t<td class="registerName">${t[i][0]} [${i}]</td>\n\t\t\t\t\t\t\t<td class="registerValue">${a[0][e]}</td>\n\t\t\t\t\t\t\t<td class="registerName">${t[i+1][0]} [${i+1}]</td>\n\t\t\t\t\t\t\t<td class="registerValue">${a[1][e]}</td>\n\t\t\t\t\t\t\t</tr>`}this.regsArea.innerHTML=`<tbody>${s}</tbody>`}updateMemory(){let t=this.mem,e=this.firstAddress,s=["decimal","hexadecimal","binary"].indexOf(this.visibleFormat);-1==s&&(s=0);let i='<tr>\n\t\t\t\t\t\t\t<td class="memoryAddress">Address</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+3</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+2</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+1</td>\n\t\t\t\t\t\t\t<td class="memoryValue">+0</td>\n\t\t\t\t\t\t</tr>';for(let a=0;a<6;a++){let a=[t.read1(e),t.read1(e+1),t.read1(e+2),t.read1(e+3)];a=[r(a[0],8),r(a[1],8),r(a[2],8),r(a[3],8)],i+=`<tr>\n\t\t\t\t\t\t\t<td class="memoryAddress">${e}</td>\n\t\t\t\t\t\t\t<td class="memoryValue">${a[3][s]}</td>\n\t\t\t\t\t\t\t<td class="memoryValue">${a[2][s]}</td>\n\t\t\t\t\t\t\t<td class="memoryValue">${a[1][s]}</td>\n\t\t\t\t\t\t\t<td class="memoryValue">${a[0][s]}</td>\n\t\t\t\t\t\t</tr>`,e+=4}this.memArea.innerHTML=`<tbody>${i}</tbody>`}updateDetails(){}update(){this.updateCode(),this.updateRegisters(),this.updateMemory(),this.updateDetails()}removeAllFormatButtonSelections(){this.format_btns.dec_format_btn.classList.remove("selected"),this.format_btns.hex_format_btn.classList.remove("selected"),this.format_btns.bin_format_btn.classList.remove("selected")}removeAllTabButtonSelections(){this.code_tabs.code_tab.classList.remove("selected"),this.code_tabs.data_tab.classList.remove("selected"),this.code_tabs.execution_tab.classList.remove("selected")}setFormat(t){["decimal","hexadecimal","binary"].includes(t)?this.visibleFormat=t:this.visibleFormat="decimal",this.update()}setCurrentTab(t){this.currentTab!==t&&(["code","data","execution"].includes(t)?this.currentTab=t:this.currentTab="code",this.updateCodeTab())}};e.write("x5",21),e.write("t1",22),e.write(7,21),e.write("x0",21),e.write("zero",21),s.write1(8001,21),s.write1(8017,4),s.write1(8008,106),o.setupUI(d),d.setup(e,s,o);const l=new i;l.validate_code("ADD a1, a2, 1"),l.validate_data("0: 1")})();